openapi: 3.0.0
info:
  title: Document and Performance Management API
  version: 1.0.0
  description: API for managing sensitive documents, assigning roles, and generating performance and sales reports.

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []

paths:
  /documents:
    get:
      summary: Get sensitive documents
      description: Retrieves a list of sensitive documents.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of sensitive documents
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    documentId:
                      type: string
                      description: The unique identifier for the document.
                      example: "doc123"
                    title:
                      type: string
                      description: The title of the document.
                      example: "Tax Document"
                    type:
                      type: string
                      description: The type of the document.
                      example: "Tax"
                    accessLevel:
                      type: string
                      description: The access level required to view the document.
                      example: "Admin"

    post:
      summary: Upload a sensitive document
      description: Uploads a new sensitive document.
      security:
        - bearerAuth: []
      requestBody:
        description: The document to upload.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the document.
                  example: "New Tax Document"
                type:
                  type: string
                  description: The type of the document.
                  example: "Tax"
                accessLevel:
                  type: string
                  description: The access level required to view the document.
                  example: "Admin"
                content:
                  type: string
                  description: The content of the document.
                  example: "Base64 encoded document content"
      responses:
        '201':
          description: Document uploaded successfully

  /documents/{documentId}:
    put:
      summary: Update a sensitive document
      description: Updates an existing sensitive document.
      security:
        - bearerAuth: []
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            example: "doc123"
      requestBody:
        description: The document data to update.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the document.
                  example: "Updated Tax Document"
                type:
                  type: string
                  description: The type of the document.
                  example: "Tax"
                accessLevel:
                  type: string
                  description: The access level required to view the document.
                  example: "Admin"
                content:
                  type: string
                  description: The content of the document.
                  example: "Base64 encoded document content"
      responses:
        '200':
          description: Document updated successfully

    delete:
      summary: Delete a sensitive document
      description: Deletes a specific sensitive document.
      security:
        - bearerAuth: []
      parameters:
        - name: documentId
          in: path
          required: true
          schema:
            type: string
            example: "doc123"
      responses:
        '204':
          description: Document deleted successfully

  /roles:
    get:
      summary: Get roles and permissions
      description: Retrieves a list of roles and their permissions.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of roles and permissions
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    roleId:
                      type: string
                      description: The unique identifier for the role.
                      example: "role123"
                    roleName:
                      type: string
                      description: The name of the role.
                      example: "Admin"
                    permissions:
                      type: array
                      items:
                        type: string
                        description: A permission assigned to the role.
                        example: "VIEW_SENSITIVE_DOCUMENTS"

    post:
      summary: Assign role to a user
      description: Assigns a role to a user.
      security:
        - bearerAuth: []
      requestBody:
        description: The role assignment details.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: The ID of the user.
                  example: "user123"
                roleId:
                  type: string
                  description: The ID of the role.
                  example: "role123"
      responses:
        '201':
          description: Role assigned successfully
